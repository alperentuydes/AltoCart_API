#region Eski kod

if (personInfos == null)
    return BadRequest("Fields are null");
if (string.IsNullOrWhiteSpace(personInfos.Email))
    return BadRequest("Email is null");
if (string.IsNullOrWhiteSpace(personInfos.Password))
    return BadRequest("Password is null");

try
{
    if (db.BigPersons.FirstOrDefaultAsync(x => x.Email == personInfos.Email) != null)
    {
        var bigPerson = await db.BigPersons.FirstOrDefaultAsync(x => x.Email == personInfos.Email);
        if (bigPerson.IsActive == true)
        {
            if (BCrypt.Net.BCrypt.Verify(personInfos.Password, bigPerson.Password))
            {

                RefreshToken refreshToken = await db.RefreshTokens.FirstOrDefaultAsync(x => x.UserGuid == bigPerson.GuidID);
                if (refreshToken != null)
                {
                    refreshToken.ExpireDate = DateTime.UtcNow.AddDays(15);
                }
                else
                {
                    refreshToken = JwtHelper.GenerateRefreshToken(bigPerson.GuidID);
                    db.RefreshTokens.Add(refreshToken);
                }
                db.SaveChanges();
                string generatedAccessToken = JwtHelper.GenerateAccessToken(bigPerson.GuidID);
                return Ok($"Login successfull,\nrefresh token = {refreshToken.Token},\naccess token = {generatedAccessToken}");
            }
            else
            {
                return BadRequest("Your password is incorrect");
            }
        }
        else
            return BadRequest("Your account is suspended");
    }
    else
        return BadRequest("There is no account with this email. Check your email");
}
catch (Exception ex)
{
    return InternalServerError(new Exception("An unexpected error occurred. Please try again later.", ex));
}

#endregion